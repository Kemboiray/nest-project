###
# @name login
POST http://localhost:3000/auth/login
Accept: application/json
Content-type: application/json

{
  "email": "kemboiray717@gmail.com",
  "password": "3354"
}

###
# GET all users

GET http://localhost:3000/users
Accept: application/json
Authorization: Bearer {{login.response.body.$.access_token}}

###
# GET a user by `id`

GET http://localhost:3000/users/66e5d9a8d3b4a7819f7a7960
Accept: application/json
Authorization: Bearer {{login.response.body.$.access_token}}

###
# Create a user. Should fail with 409 if repeated.

POST http://localhost:3000/auth/register
Accept: application/json
Content-type: application/json

{
  "email": "edd@yahoo.com",
  "name": "Edwin Kemboi",
  "password": "4210"
}

###
# Log in with wrong password. Should return 401 error.

POST http://localhost:3000/auth/login
Accept: application/json
Content-type: application/json

{
  "email": "brian@gmail.com",
  "password": "8359"
}

###
# Log in with non-existent email. Should return 404 error.

POST http://localhost:3000/auth/login
Accept: application/json
Content-type: application/json

{
  "email": "briancada@gmail.com",
  "password": "3359"
}

###
# Update a user

PUT http://localhost:3000/users/66eabe3822d5c3da2c5a7420
Accept: application/json
Content-type: application/json
Authorization: Bearer {{login.response.body.$.access_token}}

{
  "email": "kemboiray@gmail.com"
}

###
# GET a user (with malformed `id`). Should return 400

GET http://localhost:3000/users/6def604e57d9d741ea085a5
Accept: application/json
Authorization: Bearer {{login.response.body.$.access_token}}

###
# GET a non-existent user
GET http://localhost:3000/users/66dcf604e57d9d741ea085a5
Accept: application/json
Authorization: Bearer {{login.response.body.$.access_token}}


###

DELETE http://localhost:3000/users/66e08d43a6b88e4b760973df
Accept: application/json
Authorization: Bearer {{login.response.body.$.access_token}}

###
